{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (t, i) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (t, i) {\n      t.__proto__ = i;\n    } || function (t, i) {\n      for (var r in i) if (Object.prototype.hasOwnProperty.call(i, r)) t[r] = i[r];\n    };\n    return extendStatics(t, i);\n  };\n  return function (t, i) {\n    if (typeof i !== \"function\" && i !== null) throw new TypeError(\"Class extends value \" + String(i) + \" is not a constructor or null\");\n    extendStatics(t, i);\n    function __() {\n      this.constructor = t;\n    }\n    t.prototype = i === null ? Object.create(i) : (__.prototype = i.prototype, new __());\n  };\n}();\nvar __generator = this && this.h || function (t, i) {\n  var r = {\n      label: 0,\n      sent: function () {\n        if (e[0] & 1) throw e[1];\n        return e[1];\n      },\n      trys: [],\n      ops: []\n    },\n    n,\n    s,\n    e,\n    h;\n  return h = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (h[Symbol.iterator] = function () {\n    return this;\n  }), h;\n  function verb(t) {\n    return function (i) {\n      return step([t, i]);\n    };\n  }\n  function step(h) {\n    if (n) throw new TypeError(\"Generator is already executing.\");\n    while (r) try {\n      if (n = 1, s && (e = h[0] & 2 ? s[\"return\"] : h[0] ? s[\"throw\"] || ((e = s[\"return\"]) && e.call(s), 0) : s.next) && !(e = e.call(s, h[1])).done) return e;\n      if (s = 0, e) h = [h[0] & 2, e.value];\n      switch (h[0]) {\n        case 0:\n        case 1:\n          e = h;\n          break;\n        case 4:\n          r.label++;\n          return {\n            value: h[1],\n            done: false\n          };\n        case 5:\n          r.label++;\n          s = h[1];\n          h = [0];\n          continue;\n        case 7:\n          h = r.ops.pop();\n          r.trys.pop();\n          continue;\n        default:\n          if (!(e = r.trys, e = e.length > 0 && e[e.length - 1]) && (h[0] === 6 || h[0] === 2)) {\n            r = 0;\n            continue;\n          }\n          if (h[0] === 3 && (!e || h[1] > e[0] && h[1] < e[3])) {\n            r.label = h[1];\n            break;\n          }\n          if (h[0] === 6 && r.label < e[1]) {\n            r.label = e[1];\n            e = h;\n            break;\n          }\n          if (e && r.label < e[2]) {\n            r.label = e[2];\n            r.ops.push(h);\n            break;\n          }\n          if (e[2]) r.ops.pop();\n          r.trys.pop();\n          continue;\n      }\n      h = i.call(t, r);\n    } catch (t) {\n      h = [6, t];\n      s = 0;\n    } finally {\n      n = e = 0;\n    }\n    if (h[0] & 5) throw h[1];\n    return {\n      value: h[0] ? h[1] : void 0,\n      done: true\n    };\n  }\n};\nimport SequentialContainer from \"./Base\";\nimport { ContainerIterator } from \"../ContainerBase\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar LinkListIterator = function (t) {\n  __extends(LinkListIterator, t);\n  function LinkListIterator(i, r, n, s) {\n    var e = t.call(this, s) || this;\n    e.o = i;\n    e.u = r;\n    e.container = n;\n    if (e.iteratorType === 0) {\n      e.pre = function () {\n        if (this.o.L === this.u) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.L;\n        return this;\n      };\n      e.next = function () {\n        if (this.o === this.u) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.m;\n        return this;\n      };\n    } else {\n      e.pre = function () {\n        if (this.o.m === this.u) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.m;\n        return this;\n      };\n      e.next = function () {\n        if (this.o === this.u) {\n          throwIteratorAccessError();\n        }\n        this.o = this.o.L;\n        return this;\n      };\n    }\n    return e;\n  }\n  Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\n    get: function () {\n      if (this.o === this.u) {\n        throwIteratorAccessError();\n      }\n      return this.o.H;\n    },\n    set: function (t) {\n      if (this.o === this.u) {\n        throwIteratorAccessError();\n      }\n      this.o.H = t;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  LinkListIterator.prototype.copy = function () {\n    return new LinkListIterator(this.o, this.u, this.container, this.iteratorType);\n  };\n  return LinkListIterator;\n}(ContainerIterator);\nvar LinkList = function (t) {\n  __extends(LinkList, t);\n  function LinkList(i) {\n    if (i === void 0) {\n      i = [];\n    }\n    var r = t.call(this) || this;\n    r.u = {};\n    r.l = r.M = r.u.L = r.u.m = r.u;\n    var n = r;\n    i.forEach(function (t) {\n      n.pushBack(t);\n    });\n    return r;\n  }\n  LinkList.prototype.U = function (t) {\n    var i = t.L,\n      r = t.m;\n    i.m = r;\n    r.L = i;\n    if (t === this.l) {\n      this.l = r;\n    }\n    if (t === this.M) {\n      this.M = i;\n    }\n    this.i -= 1;\n  };\n  LinkList.prototype.V = function (t, i) {\n    var r = i.m;\n    var n = {\n      H: t,\n      L: i,\n      m: r\n    };\n    i.m = n;\n    r.L = n;\n    if (i === this.u) {\n      this.l = n;\n    }\n    if (r === this.u) {\n      this.M = n;\n    }\n    this.i += 1;\n  };\n  LinkList.prototype.clear = function () {\n    this.i = 0;\n    this.l = this.M = this.u.L = this.u.m = this.u;\n  };\n  LinkList.prototype.begin = function () {\n    return new LinkListIterator(this.l, this.u, this);\n  };\n  LinkList.prototype.end = function () {\n    return new LinkListIterator(this.u, this.u, this);\n  };\n  LinkList.prototype.rBegin = function () {\n    return new LinkListIterator(this.M, this.u, this, 1);\n  };\n  LinkList.prototype.rEnd = function () {\n    return new LinkListIterator(this.u, this.u, this, 1);\n  };\n  LinkList.prototype.front = function () {\n    return this.l.H;\n  };\n  LinkList.prototype.back = function () {\n    return this.M.H;\n  };\n  LinkList.prototype.getElementByPos = function (t) {\n    if (t < 0 || t > this.i - 1) {\n      throw new RangeError();\n    }\n    var i = this.l;\n    while (t--) {\n      i = i.m;\n    }\n    return i.H;\n  };\n  LinkList.prototype.eraseElementByPos = function (t) {\n    if (t < 0 || t > this.i - 1) {\n      throw new RangeError();\n    }\n    var i = this.l;\n    while (t--) {\n      i = i.m;\n    }\n    this.U(i);\n    return this.i;\n  };\n  LinkList.prototype.eraseElementByValue = function (t) {\n    var i = this.l;\n    while (i !== this.u) {\n      if (i.H === t) {\n        this.U(i);\n      }\n      i = i.m;\n    }\n    return this.i;\n  };\n  LinkList.prototype.eraseElementByIterator = function (t) {\n    var i = t.o;\n    if (i === this.u) {\n      throwIteratorAccessError();\n    }\n    t = t.next();\n    this.U(i);\n    return t;\n  };\n  LinkList.prototype.pushBack = function (t) {\n    this.V(t, this.M);\n    return this.i;\n  };\n  LinkList.prototype.popBack = function () {\n    if (this.i === 0) return;\n    var t = this.M.H;\n    this.U(this.M);\n    return t;\n  };\n  LinkList.prototype.pushFront = function (t) {\n    this.V(t, this.u);\n    return this.i;\n  };\n  LinkList.prototype.popFront = function () {\n    if (this.i === 0) return;\n    var t = this.l.H;\n    this.U(this.l);\n    return t;\n  };\n  LinkList.prototype.setElementByPos = function (t, i) {\n    if (t < 0 || t > this.i - 1) {\n      throw new RangeError();\n    }\n    var r = this.l;\n    while (t--) {\n      r = r.m;\n    }\n    r.H = i;\n  };\n  LinkList.prototype.insert = function (t, i, r) {\n    if (r === void 0) {\n      r = 1;\n    }\n    if (t < 0 || t > this.i) {\n      throw new RangeError();\n    }\n    if (r <= 0) return this.i;\n    if (t === 0) {\n      while (r--) this.pushFront(i);\n    } else if (t === this.i) {\n      while (r--) this.pushBack(i);\n    } else {\n      var n = this.l;\n      for (var s = 1; s < t; ++s) {\n        n = n.m;\n      }\n      var e = n.m;\n      this.i += r;\n      while (r--) {\n        n.m = {\n          H: i,\n          L: n\n        };\n        n.m.L = n;\n        n = n.m;\n      }\n      n.m = e;\n      e.L = n;\n    }\n    return this.i;\n  };\n  LinkList.prototype.find = function (t) {\n    var i = this.l;\n    while (i !== this.u) {\n      if (i.H === t) {\n        return new LinkListIterator(i, this.u, this);\n      }\n      i = i.m;\n    }\n    return this.end();\n  };\n  LinkList.prototype.reverse = function () {\n    if (this.i <= 1) {\n      return this;\n    }\n    var t = this.l;\n    var i = this.M;\n    var r = 0;\n    while (r << 1 < this.i) {\n      var n = t.H;\n      t.H = i.H;\n      i.H = n;\n      t = t.m;\n      i = i.L;\n      r += 1;\n    }\n    return this;\n  };\n  LinkList.prototype.unique = function () {\n    if (this.i <= 1) {\n      return this.i;\n    }\n    var t = this.l;\n    while (t !== this.u) {\n      var i = t;\n      while (i.m !== this.u && i.H === i.m.H) {\n        i = i.m;\n        this.i -= 1;\n      }\n      t.m = i.m;\n      t.m.L = t;\n      t = t.m;\n    }\n    return this.i;\n  };\n  LinkList.prototype.sort = function (t) {\n    if (this.i <= 1) {\n      return this;\n    }\n    var i = [];\n    this.forEach(function (t) {\n      i.push(t);\n    });\n    i.sort(t);\n    var r = this.l;\n    i.forEach(function (t) {\n      r.H = t;\n      r = r.m;\n    });\n    return this;\n  };\n  LinkList.prototype.merge = function (t) {\n    var i = this;\n    if (this.i === 0) {\n      t.forEach(function (t) {\n        i.pushBack(t);\n      });\n    } else {\n      var r = this.l;\n      t.forEach(function (t) {\n        while (r !== i.u && r.H <= t) {\n          r = r.m;\n        }\n        i.V(t, r.L);\n      });\n    }\n    return this.i;\n  };\n  LinkList.prototype.forEach = function (t) {\n    var i = this.l;\n    var r = 0;\n    while (i !== this.u) {\n      t(i.H, r++, this);\n      i = i.m;\n    }\n  };\n  LinkList.prototype[Symbol.iterator] = function () {\n    var t;\n    return __generator(this, function (i) {\n      switch (i.label) {\n        case 0:\n          if (this.i === 0) return [2];\n          t = this.l;\n          i.label = 1;\n        case 1:\n          if (!(t !== this.u)) return [3, 3];\n          return [4, t.H];\n        case 2:\n          i.sent();\n          t = t.m;\n          return [3, 1];\n        case 3:\n          return [2];\n      }\n    });\n  };\n  return LinkList;\n}(SequentialContainer);\nexport default LinkList;","map":{"version":3,"names":["__extends","t","extendStatics","i","Object","setPrototypeOf","__proto__","Array","r","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","h","label","sent","e","trys","ops","n","s","next","verb","throw","return","Symbol","iterator","step","done","value","pop","length","push","SequentialContainer","ContainerIterator","throwIteratorAccessError","LinkListIterator","o","u","container","iteratorType","pre","L","m","defineProperty","get","H","set","enumerable","configurable","copy","LinkList","l","M","forEach","pushBack","U","V","clear","begin","end","rBegin","rEnd","front","back","getElementByPos","RangeError","eraseElementByPos","eraseElementByValue","eraseElementByIterator","popBack","pushFront","popFront","setElementByPos","insert","find","reverse","unique","sort","merge"],"sources":["/Users/aliosmanhekimoglu/Desktop/REACT_PROJECTS/youtube_clone/node_modules/js-sdsl/dist/esm/container/SequentialContainer/container/SequentialContainer/LinkList.js","/Users/aliosmanhekimoglu/Desktop/REACT_PROJECTS/youtube_clone/node_modules/js-sdsl/dist/esm/src/container/SequentialContainer/LinkList.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport SequentialContainer from './Base';\nimport { ContainerIterator } from \"../ContainerBase\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar LinkListIterator = /** @class */ (function (_super) {\n    __extends(LinkListIterator, _super);\n    /**\n     * @internal\n     */\n    function LinkListIterator(_node, _header, container, iteratorType) {\n        var _this = _super.call(this, iteratorType) || this;\n        _this._node = _node;\n        _this._header = _header;\n        _this.container = container;\n        if (_this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            _this.pre = function () {\n                if (this._node._pre === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n        }\n        else {\n            _this.pre = function () {\n                if (this._node._next === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n        }\n        return _this;\n    }\n    Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._value;\n        },\n        set: function (newValue) {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            this._node._value = newValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LinkListIterator.prototype.copy = function () {\n        return new LinkListIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return LinkListIterator;\n}(ContainerIterator));\nvar LinkList = /** @class */ (function (_super) {\n    __extends(LinkList, _super);\n    function LinkList(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        _this._header = {};\n        _this._head = _this._tail = _this._header._pre = _this._header._next = _this._header;\n        var self = _this;\n        container.forEach(function (el) {\n            self.pushBack(el);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    LinkList.prototype._eraseNode = function (node) {\n        var _pre = node._pre, _next = node._next;\n        _pre._next = _next;\n        _next._pre = _pre;\n        if (node === this._head) {\n            this._head = _next;\n        }\n        if (node === this._tail) {\n            this._tail = _pre;\n        }\n        this._length -= 1;\n    };\n    /**\n     * @internal\n     */\n    LinkList.prototype._insertNode = function (value, pre) {\n        var next = pre._next;\n        var node = {\n            _value: value,\n            _pre: pre,\n            _next: next\n        };\n        pre._next = node;\n        next._pre = node;\n        if (pre === this._header) {\n            this._head = node;\n        }\n        if (next === this._header) {\n            this._tail = node;\n        }\n        this._length += 1;\n    };\n    LinkList.prototype.clear = function () {\n        this._length = 0;\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n    };\n    LinkList.prototype.begin = function () {\n        return new LinkListIterator(this._head, this._header, this);\n    };\n    LinkList.prototype.end = function () {\n        return new LinkListIterator(this._header, this._header, this);\n    };\n    LinkList.prototype.rBegin = function () {\n        return new LinkListIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    LinkList.prototype.rEnd = function () {\n        return new LinkListIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    LinkList.prototype.front = function () {\n        return this._head._value;\n    };\n    LinkList.prototype.back = function () {\n        return this._tail._value;\n    };\n    LinkList.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        return curNode._value;\n    };\n    LinkList.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        this._eraseNode(curNode);\n        return this._length;\n    };\n    LinkList.prototype.eraseElementByValue = function (_value) {\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === _value) {\n                this._eraseNode(curNode);\n            }\n            curNode = curNode._next;\n        }\n        return this._length;\n    };\n    LinkList.prototype.eraseElementByIterator = function (iter) {\n        var node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        iter = iter.next();\n        this._eraseNode(node);\n        return iter;\n    };\n    LinkList.prototype.pushBack = function (element) {\n        this._insertNode(element, this._tail);\n        return this._length;\n    };\n    LinkList.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        var value = this._tail._value;\n        this._eraseNode(this._tail);\n        return value;\n    };\n    /**\n     * @description Push an element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    LinkList.prototype.pushFront = function (element) {\n        this._insertNode(element, this._header);\n        return this._length;\n    };\n    /**\n     * @description Removes the first element.\n     * @returns The element you popped.\n     */\n    LinkList.prototype.popFront = function () {\n        if (this._length === 0)\n            return;\n        var value = this._head._value;\n        this._eraseNode(this._head);\n        return value;\n    };\n    LinkList.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        curNode._value = element;\n    };\n    LinkList.prototype.insert = function (pos, element, num) {\n        if (num === void 0) { num = 1; }\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        if (num <= 0)\n            return this._length;\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            var curNode = this._head;\n            for (var i = 1; i < pos; ++i) {\n                curNode = curNode._next;\n            }\n            var next = curNode._next;\n            this._length += num;\n            while (num--) {\n                curNode._next = {\n                    _value: element,\n                    _pre: curNode\n                };\n                curNode._next._pre = curNode;\n                curNode = curNode._next;\n            }\n            curNode._next = next;\n            next._pre = curNode;\n        }\n        return this._length;\n    };\n    LinkList.prototype.find = function (element) {\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === element) {\n                return new LinkListIterator(curNode, this._header, this);\n            }\n            curNode = curNode._next;\n        }\n        return this.end();\n    };\n    LinkList.prototype.reverse = function () {\n        if (this._length <= 1) {\n            return this;\n        }\n        var pHead = this._head;\n        var pTail = this._tail;\n        var cnt = 0;\n        while ((cnt << 1) < this._length) {\n            var tmp = pHead._value;\n            pHead._value = pTail._value;\n            pTail._value = tmp;\n            pHead = pHead._next;\n            pTail = pTail._pre;\n            cnt += 1;\n        }\n        return this;\n    };\n    LinkList.prototype.unique = function () {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            var tmpNode = curNode;\n            while (tmpNode._next !== this._header &&\n                tmpNode._value === tmpNode._next._value) {\n                tmpNode = tmpNode._next;\n                this._length -= 1;\n            }\n            curNode._next = tmpNode._next;\n            curNode._next._pre = curNode;\n            curNode = curNode._next;\n        }\n        return this._length;\n    };\n    LinkList.prototype.sort = function (cmp) {\n        if (this._length <= 1) {\n            return this;\n        }\n        var arr = [];\n        this.forEach(function (el) {\n            arr.push(el);\n        });\n        arr.sort(cmp);\n        var curNode = this._head;\n        arr.forEach(function (element) {\n            curNode._value = element;\n            curNode = curNode._next;\n        });\n        return this;\n    };\n    /**\n     * @description Merges two sorted lists.\n     * @param list - The other list you want to merge (must be sorted).\n     * @returns The size of list after merging.\n     * @example\n     * const linkA = new LinkList([1, 3, 5]);\n     * const linkB = new LinkList([2, 4, 6]);\n     * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n     */\n    LinkList.prototype.merge = function (list) {\n        var self = this;\n        if (this._length === 0) {\n            list.forEach(function (el) {\n                self.pushBack(el);\n            });\n        }\n        else {\n            var curNode_1 = this._head;\n            list.forEach(function (el) {\n                while (curNode_1 !== self._header &&\n                    curNode_1._value <= el) {\n                    curNode_1 = curNode_1._next;\n                }\n                self._insertNode(el, curNode_1._pre);\n            });\n        }\n        return this._length;\n    };\n    LinkList.prototype.forEach = function (callback) {\n        var curNode = this._head;\n        var index = 0;\n        while (curNode !== this._header) {\n            callback(curNode._value, index++, this);\n            curNode = curNode._next;\n        }\n    };\n    LinkList.prototype[Symbol.iterator] = function () {\n        var curNode;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (this._length === 0)\n                        return [2 /*return*/];\n                    curNode = this._head;\n                    _a.label = 1;\n                case 1:\n                    if (!(curNode !== this._header)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, curNode._value];\n                case 2:\n                    _a.sent();\n                    curNode = curNode._next;\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    return LinkList;\n}(SequentialContainer));\nexport default LinkList;\n","import SequentialContainer from './Base';\nimport { ContainerIterator, initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\ntype LinkNode<T> = {\n  _value: T;\n  _pre: LinkNode<T>;\n  _next: LinkNode<T>;\n}\n\nclass LinkListIterator<T> extends ContainerIterator<T> {\n  readonly container: LinkList<T>;\n  /**\n   * @internal\n   */\n  _node: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  /**\n   * @internal\n   */\n  constructor(\n    _node: LinkNode<T>,\n    _header: LinkNode<T>,\n    container: LinkList<T>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = _node;\n    this._header = _header;\n    this.container = container;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node._pre === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node._next === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n    }\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._value;\n  }\n  set pointer(newValue: T) {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    this._node._value = newValue;\n  }\n  copy() {\n    return new LinkListIterator<T>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: LinkListIterator<T>): boolean;\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport type { LinkListIterator };\n\nclass LinkList<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _head: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private _tail: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  constructor(container: initContainer<T> = []) {\n    super();\n    this._header = <LinkNode<T>>{};\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n    const self = this;\n    container.forEach(function (el) {\n      self.pushBack(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private _eraseNode(node: LinkNode<T>) {\n    const { _pre, _next } = node;\n    _pre._next = _next;\n    _next._pre = _pre;\n    if (node === this._head) {\n      this._head = _next;\n    }\n    if (node === this._tail) {\n      this._tail = _pre;\n    }\n    this._length -= 1;\n  }\n  /**\n   * @internal\n   */\n  private _insertNode(value: T, pre: LinkNode<T>) {\n    const next = pre._next;\n    const node = {\n      _value: value,\n      _pre: pre,\n      _next: next\n    };\n    pre._next = node;\n    next._pre = node;\n    if (pre === this._header) {\n      this._head = node;\n    }\n    if (next === this._header) {\n      this._tail = node;\n    }\n    this._length += 1;\n  }\n  clear() {\n    this._length = 0;\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n  }\n  begin() {\n    return new LinkListIterator<T>(this._head, this._header, this);\n  }\n  end() {\n    return new LinkListIterator<T>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new LinkListIterator<T>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new LinkListIterator<T>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    return this._head._value;\n  }\n  back(): T | undefined {\n    return this._tail._value;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    return curNode._value;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    this._eraseNode(curNode);\n    return this._length;\n  }\n  eraseElementByValue(_value: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === _value) {\n        this._eraseNode(curNode);\n      }\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  eraseElementByIterator(iter: LinkListIterator<T>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    iter = iter.next();\n    this._eraseNode(node);\n    return iter;\n  }\n  pushBack(element: T) {\n    this._insertNode(element, this._tail);\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._tail._value;\n    this._eraseNode(this._tail);\n    return value;\n  }\n  /**\n   * @description Push an element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    this._insertNode(element, this._header);\n    return this._length;\n  }\n  /**\n   * @description Removes the first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._head._value;\n    this._eraseNode(this._head);\n    return value;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    curNode._value = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    if (num <= 0) return this._length;\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      let curNode = this._head;\n      for (let i = 1; i < pos; ++i) {\n        curNode = curNode._next;\n      }\n      const next = curNode._next;\n      this._length += num;\n      while (num--) {\n        curNode._next = <LinkNode<T>>{\n          _value: element,\n          _pre: curNode\n        };\n        curNode._next._pre = curNode;\n        curNode = curNode._next;\n      }\n      curNode._next = next;\n      next._pre = curNode;\n    }\n    return this._length;\n  }\n  find(element: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === element) {\n        return new LinkListIterator<T>(curNode, this._header, this);\n      }\n      curNode = curNode._next;\n    }\n    return this.end();\n  }\n  reverse() {\n    if (this._length <= 1) {\n      return this;\n    }\n    let pHead = this._head;\n    let pTail = this._tail;\n    let cnt = 0;\n    while ((cnt << 1) < this._length) {\n      const tmp = pHead._value;\n      pHead._value = pTail._value;\n      pTail._value = tmp;\n      pHead = pHead._next;\n      pTail = pTail._pre;\n      cnt += 1;\n    }\n    return this;\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      let tmpNode = curNode;\n      while (\n        tmpNode._next !== this._header &&\n        tmpNode._value === tmpNode._next._value\n      ) {\n        tmpNode = tmpNode._next;\n        this._length -= 1;\n      }\n      curNode._next = tmpNode._next;\n      curNode._next._pre = curNode;\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    if (this._length <= 1) {\n      return this;\n    }\n    const arr: T[] = [];\n    this.forEach(function (el) {\n      arr.push(el);\n    });\n    arr.sort(cmp);\n    let curNode: LinkNode<T> = this._head;\n    arr.forEach(function (element) {\n      curNode._value = element;\n      curNode = curNode._next;\n    });\n    return this;\n  }\n  /**\n   * @description Merges two sorted lists.\n   * @param list - The other list you want to merge (must be sorted).\n   * @returns The size of list after merging.\n   * @example\n   * const linkA = new LinkList([1, 3, 5]);\n   * const linkB = new LinkList([2, 4, 6]);\n   * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n   */\n  merge(list: LinkList<T>) {\n    const self = this;\n    if (this._length === 0) {\n      list.forEach(function (el) {\n        self.pushBack(el);\n      });\n    } else {\n      let curNode = this._head;\n      list.forEach(function (el) {\n        while (\n          curNode !== self._header &&\n          curNode._value <= el\n        ) {\n          curNode = curNode._next;\n        }\n        self._insertNode(el, curNode._pre);\n      });\n    }\n    return this._length;\n  }\n  forEach(callback: (element: T, index: number, list: LinkList<T>) => void) {\n    let curNode = this._head;\n    let index = 0;\n    while (curNode !== this._header) {\n      callback(curNode._value, index++, this);\n      curNode = curNode._next;\n    }\n  }\n  * [Symbol.iterator]() {\n    if (this._length === 0) return;\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      yield curNode._value;\n      curNode = curNode._next;\n    }\n  }\n}\n\nexport default LinkList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}