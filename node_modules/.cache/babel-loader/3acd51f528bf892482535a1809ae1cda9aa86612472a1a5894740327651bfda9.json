{"ast":null,"code":"var _jsxFileName = \"/Users/aliosmanhekimoglu/Desktop/REACT_PROJECTS/youtube_clone/src/components/Videos.jsx\";\nimport React from \"react\";\nimport { Stack, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = _ref => {\n  let {\n    videos\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    gap: 2,\n    children: videos.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","Stack","Box","jsxDEV","_jsxDEV","Videos","_ref","videos","direction","flexWrap","justifyContent","gap","children","map","item","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aliosmanhekimoglu/Desktop/REACT_PROJECTS/youtube_clone/src/components/Videos.jsx"],"sourcesContent":["import React from \"react\";\nimport { Stack, Box } from \"@mui/material\";\n\nconst Videos = ({ videos }) => {\n  return (\n    <Stack\n      direction=\"row\"\n      flexWrap=\"wrap\"\n      justifyContent=\"start\"\n      gap={2}\n    >\n\n        {videos.map((item,idx)=> <Box>\n            \n        </Box>)}\n    </Stack>\n  );\n};\n\nexport default Videos;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACxB,oBACEF,OAAA,CAACH,KAAK;IACJO,SAAS,EAAC,KAAK;IACfC,QAAQ,EAAC,MAAM;IACfC,cAAc,EAAC,OAAO;IACtBC,GAAG,EAAE,CAAE;IAAAC,QAAA,EAGJL,MAAM,CAACM,GAAG,CAAC,CAACC,IAAI,EAACC,GAAG,kBAAIX,OAAA,CAACF,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEZ,CAAC;AAACC,EAAA,GAdIf,MAAM;AAgBZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}