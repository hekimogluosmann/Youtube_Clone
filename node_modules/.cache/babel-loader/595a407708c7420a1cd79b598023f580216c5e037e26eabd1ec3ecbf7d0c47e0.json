{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (e, t) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (e, t) {\n      e.__proto__ = t;\n    } || function (e, t) {\n      for (var n in t) if (Object.prototype.hasOwnProperty.call(t, n)) e[n] = t[n];\n    };\n    return extendStatics(e, t);\n  };\n  return function (e, t) {\n    if (typeof t !== \"function\" && t !== null) throw new TypeError(\"Class extends value \" + String(t) + \" is not a constructor or null\");\n    extendStatics(e, t);\n    function __() {\n      this.constructor = e;\n    }\n    e.prototype = t === null ? Object.create(t) : (__.prototype = t.prototype, new __());\n  };\n}();\nvar TreeNode = function () {\n  function TreeNode(e, t, n) {\n    if (n === void 0) {\n      n = 1;\n    }\n    this.Y = undefined;\n    this.Z = undefined;\n    this.sr = undefined;\n    this.p = e;\n    this.H = t;\n    this.ee = n;\n  }\n  TreeNode.prototype.L = function () {\n    var e = this;\n    if (e.ee === 1 && e.sr.sr === e) {\n      e = e.Z;\n    } else if (e.Y) {\n      e = e.Y;\n      while (e.Z) {\n        e = e.Z;\n      }\n    } else {\n      var t = e.sr;\n      while (t.Y === e) {\n        e = t;\n        t = e.sr;\n      }\n      e = t;\n    }\n    return e;\n  };\n  TreeNode.prototype.m = function () {\n    var e = this;\n    if (e.Z) {\n      e = e.Z;\n      while (e.Y) {\n        e = e.Y;\n      }\n      return e;\n    } else {\n      var t = e.sr;\n      while (t.Z === e) {\n        e = t;\n        t = e.sr;\n      }\n      if (e.Z !== t) {\n        return t;\n      } else return e;\n    }\n  };\n  TreeNode.prototype.te = function () {\n    var e = this.sr;\n    var t = this.Z;\n    var n = t.Y;\n    if (e.sr === this) e.sr = t;else if (e.Y === this) e.Y = t;else e.Z = t;\n    t.sr = e;\n    t.Y = this;\n    this.sr = t;\n    this.Z = n;\n    if (n) n.sr = this;\n    return t;\n  };\n  TreeNode.prototype.ne = function () {\n    var e = this.sr;\n    var t = this.Y;\n    var n = t.Z;\n    if (e.sr === this) e.sr = t;else if (e.Y === this) e.Y = t;else e.Z = t;\n    t.sr = e;\n    t.Z = this;\n    this.sr = t;\n    this.Y = n;\n    if (n) n.sr = this;\n    return t;\n  };\n  return TreeNode;\n}();\nexport { TreeNode };\nvar TreeNodeEnableIndex = function (e) {\n  __extends(TreeNodeEnableIndex, e);\n  function TreeNodeEnableIndex() {\n    var t = e !== null && e.apply(this, arguments) || this;\n    t.hr = 1;\n    return t;\n  }\n  TreeNodeEnableIndex.prototype.te = function () {\n    var t = e.prototype.te.call(this);\n    this.ie();\n    t.ie();\n    return t;\n  };\n  TreeNodeEnableIndex.prototype.ne = function () {\n    var t = e.prototype.ne.call(this);\n    this.ie();\n    t.ie();\n    return t;\n  };\n  TreeNodeEnableIndex.prototype.ie = function () {\n    this.hr = 1;\n    if (this.Y) {\n      this.hr += this.Y.hr;\n    }\n    if (this.Z) {\n      this.hr += this.Z.hr;\n    }\n  };\n  return TreeNodeEnableIndex;\n}(TreeNode);\nexport { TreeNodeEnableIndex };","map":{"version":3,"names":["__extends","t","extendStatics","e","Object","setPrototypeOf","__proto__","Array","n","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","TreeNode","Y","undefined","Z","sr","p","H","ee","L","m","te","ne","TreeNodeEnableIndex","apply","arguments","hr","ie"],"sources":["/Users/aliosmanhekimoglu/Desktop/REACT_PROJECTS/youtube_clone/node_modules/js-sdsl/dist/esm/container/TreeContainer/Base/container/TreeContainer/Base/TreeNode.js","/Users/aliosmanhekimoglu/Desktop/REACT_PROJECTS/youtube_clone/node_modules/js-sdsl/dist/esm/container/src/container/TreeContainer/Base/TreeNode.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(key, value, color) {\n        if (color === void 0) { color = 1 /* TreeNodeColor.RED */; }\n        this._left = undefined;\n        this._right = undefined;\n        this._parent = undefined;\n        this._key = key;\n        this._value = value;\n        this._color = color;\n    }\n    /**\n     * @description Get the pre node.\n     * @returns TreeNode about the pre node.\n     */\n    TreeNode.prototype._pre = function () {\n        var preNode = this;\n        if (preNode._color === 1 /* TreeNodeColor.RED */ &&\n            preNode._parent._parent === preNode) {\n            preNode = preNode._right;\n        }\n        else if (preNode._left) {\n            preNode = preNode._left;\n            while (preNode._right) {\n                preNode = preNode._right;\n            }\n        }\n        else {\n            var pre = preNode._parent;\n            while (pre._left === preNode) {\n                preNode = pre;\n                pre = preNode._parent;\n            }\n            preNode = pre;\n        }\n        return preNode;\n    };\n    /**\n     * @description Get the next node.\n     * @returns TreeNode about the next node.\n     */\n    TreeNode.prototype._next = function () {\n        var nextNode = this;\n        if (nextNode._right) {\n            nextNode = nextNode._right;\n            while (nextNode._left) {\n                nextNode = nextNode._left;\n            }\n            return nextNode;\n        }\n        else {\n            var pre = nextNode._parent;\n            while (pre._right === nextNode) {\n                nextNode = pre;\n                pre = nextNode._parent;\n            }\n            if (nextNode._right !== pre) {\n                return pre;\n            }\n            else\n                return nextNode;\n        }\n    };\n    /**\n     * @description Rotate left.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNode.prototype._rotateLeft = function () {\n        var PP = this._parent;\n        var V = this._right;\n        var R = V._left;\n        if (PP._parent === this)\n            PP._parent = V;\n        else if (PP._left === this)\n            PP._left = V;\n        else\n            PP._right = V;\n        V._parent = PP;\n        V._left = this;\n        this._parent = V;\n        this._right = R;\n        if (R)\n            R._parent = this;\n        return V;\n    };\n    /**\n     * @description Rotate right.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNode.prototype._rotateRight = function () {\n        var PP = this._parent;\n        var F = this._left;\n        var K = F._right;\n        if (PP._parent === this)\n            PP._parent = F;\n        else if (PP._left === this)\n            PP._left = F;\n        else\n            PP._right = F;\n        F._parent = PP;\n        F._right = this;\n        this._parent = F;\n        this._left = K;\n        if (K)\n            K._parent = this;\n        return F;\n    };\n    return TreeNode;\n}());\nexport { TreeNode };\nvar TreeNodeEnableIndex = /** @class */ (function (_super) {\n    __extends(TreeNodeEnableIndex, _super);\n    function TreeNodeEnableIndex() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._subTreeSize = 1;\n        return _this;\n    }\n    /**\n     * @description Rotate left and do recount.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNodeEnableIndex.prototype._rotateLeft = function () {\n        var parent = _super.prototype._rotateLeft.call(this);\n        this._recount();\n        parent._recount();\n        return parent;\n    };\n    /**\n     * @description Rotate right and do recount.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNodeEnableIndex.prototype._rotateRight = function () {\n        var parent = _super.prototype._rotateRight.call(this);\n        this._recount();\n        parent._recount();\n        return parent;\n    };\n    TreeNodeEnableIndex.prototype._recount = function () {\n        this._subTreeSize = 1;\n        if (this._left) {\n            this._subTreeSize += this._left._subTreeSize;\n        }\n        if (this._right) {\n            this._subTreeSize += this._right._subTreeSize;\n        }\n    };\n    return TreeNodeEnableIndex;\n}(TreeNode));\nexport { TreeNodeEnableIndex };\n","export const enum TreeNodeColor {\n  RED = 1,\n  BLACK = 0\n}\n\nexport class TreeNode<K, V> {\n  _color: TreeNodeColor;\n  _key: K | undefined;\n  _value: V | undefined;\n  _left: TreeNode<K, V> | undefined = undefined;\n  _right: TreeNode<K, V> | undefined = undefined;\n  _parent: TreeNode<K, V> | undefined = undefined;\n  constructor(\n    key?: K,\n    value?: V,\n    color: TreeNodeColor = TreeNodeColor.RED\n  ) {\n    this._key = key;\n    this._value = value;\n    this._color = color;\n  }\n  /**\n   * @description Get the pre node.\n   * @returns TreeNode about the pre node.\n   */\n  _pre() {\n    let preNode: TreeNode<K, V> = this;\n    if (\n      preNode._color === TreeNodeColor.RED &&\n      preNode._parent!._parent === preNode\n    ) {\n      preNode = preNode._right!;\n    } else if (preNode._left) {\n      preNode = preNode._left;\n      while (preNode._right) {\n        preNode = preNode._right;\n      }\n    } else {\n      let pre = preNode._parent!;\n      while (pre._left === preNode) {\n        preNode = pre;\n        pre = preNode._parent!;\n      }\n      preNode = pre;\n    }\n    return preNode;\n  }\n  /**\n   * @description Get the next node.\n   * @returns TreeNode about the next node.\n   */\n  _next() {\n    let nextNode: TreeNode<K, V> = this;\n    if (nextNode._right) {\n      nextNode = nextNode._right;\n      while (nextNode._left) {\n        nextNode = nextNode._left;\n      }\n      return nextNode;\n    } else {\n      let pre = nextNode._parent!;\n      while (pre._right === nextNode) {\n        nextNode = pre;\n        pre = nextNode._parent!;\n      }\n      if (nextNode._right !== pre) {\n        return pre;\n      } else return nextNode;\n    }\n  }\n  /**\n   * @description Rotate left.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const PP = this._parent!;\n    const V = this._right!;\n    const R = V._left;\n\n    if (PP._parent === this) PP._parent = V;\n    else if (PP._left === this) PP._left = V;\n    else PP._right = V;\n\n    V._parent = PP;\n    V._left = this;\n\n    this._parent = V;\n    this._right = R;\n\n    if (R) R._parent = this;\n\n    return V;\n  }\n  /**\n   * @description Rotate right.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const PP = this._parent!;\n    const F = this._left!;\n    const K = F._right;\n\n    if (PP._parent === this) PP._parent = F;\n    else if (PP._left === this) PP._left = F;\n    else PP._right = F;\n\n    F._parent = PP;\n    F._right = this;\n\n    this._parent = F;\n    this._left = K;\n\n    if (K) K._parent = this;\n\n    return F;\n  }\n}\n\nexport class TreeNodeEnableIndex<K, V> extends TreeNode<K, V> {\n  _subTreeSize = 1;\n  /**\n   * @description Rotate left and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const parent = super._rotateLeft() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  /**\n   * @description Rotate right and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const parent = super._rotateRight() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  _recount() {\n    this._subTreeSize = 1;\n    if (this._left) {\n      this._subTreeSize += (this._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    if (this._right) {\n      this._subTreeSize += (this._right as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}